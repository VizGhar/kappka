apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "xyz.kandrac.kappka"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 5
        versionName "0.4"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        release {
            if (System.getenv("KANDRAC_KEYSTORE") != null)
                storeFile file(System.getenv("KANDRAC_KEYSTORE"))
            if (System.getenv("KANDRAC_KEYSTORE_PASS") != null)
                storePassword System.getenv("KANDRAC_KEYSTORE_PASS")
            if (System.getenv("KAPPKA_KEY_ALIAS") != null)
                keyAlias System.getenv("KAPPKA_KEY_ALIAS")
            if (System.getenv("KAPPKA_KEY_PASS") != null)
                keyPassword System.getenv("KAPPKA_KEY_PASS")
        }
    }

    buildTypes {
        //noinspection GroovyMissingReturnStatement
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [databaseAuthority: "xyz.kandrac.kappka",
                                    crashlyticsApiKey: project.property("crashlyticsApiKey").toString()]

            ext {
                betaDistributionEmailsFilePath = "app/crashlyticsAssets/release_emails.txt"
            }

            buildConfigField 'String', 'DATABASE_AUTHORITY', '"xyz.kandrac.kappka"'
        }
        //noinspection GroovyMissingReturnStatement
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [databaseAuthority: "xyz.kandrac.kappka.debug",
                                    crashlyticsApiKey: project.property("crashlyticsApiKey").toString()]

            ext {
                betaDistributionReleaseNotesFilePath = "app/crashlyticsAssets/beta_distribution_release_notes.txt"
                betaDistributionEmailsFilePath = "app/crashlyticsAssets/beta_distribution_emails.txt"
            }

            buildConfigField 'String', 'DATABASE_AUTHORITY', '"xyz.kandrac.kappka.debug"'
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

configurations.all {
    // Facebook and Espresso conflicts
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    resolutionStrategy.force "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    resolutionStrategy.force "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    resolutionStrategy.force "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
}

dependencies {

    // App compat libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:gridlayout-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    // Firebase libraries
    compile "com.google.firebase:firebase-database:$rootProject.firebaseVersion"

    // Square libraries
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'

    compile 'io.github.yavski:fab-speed-dial:1.0.6'

    // Dagger
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"

    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestCompile "junit:junit:$rootProject.junitVersion"
}

apply plugin: 'com.google.gms.google-services'